"use strict";
exports.__esModule = true;
exports.useIntersected = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var useIntersected = function (_a) {
    var _b = _a.threshold, threshold = _b === void 0 ? 0.5 : _b, ref = _a.ref, _c = _a.rootMargin, rootMargin = _c === void 0 ? '0px' : _c;
    var _d = react_1["default"].useState(false), isIntersected = _d[0], setIsIntersected = _d[1];
    react_1["default"].useEffect(function () {
        var observer = new IntersectionObserver(function (_a) {
            var entry = _a[0];
            if (entry.isIntersecting) {
                setIsIntersected(entry.isIntersecting);
            }
        }, {
            threshold: threshold,
            root: null,
            rootMargin: rootMargin
        });
        if (ref === null || ref === void 0 ? void 0 : ref.current) {
            observer.observe(ref.current);
        }
        return function () {
            observer.disconnect();
        };
    }, [ref, rootMargin, threshold]);
    return [isIntersected];
};
exports.useIntersected = useIntersected;
//# sourceMappingURL=intersected.js.map